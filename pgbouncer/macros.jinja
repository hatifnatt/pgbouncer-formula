# -*- coding: utf-8 -*-
# vim: ft=jinja
#
# Collection of common macros

{% set tplroot = tplfile.split('/')[0] %}

{%- macro format_kwargs(kwarg, ind=4) -%}
    {%- if kwarg and kwarg is mapping %}

        {%- filter indent(ind) %}
            {%- for k, v in kwarg|dictsort() %}
- {{ k }}: {{ v|tojson }}
            {%- endfor %}
        {%- endfilter %}

    {%- endif %}
{%- endmacro %}

{% macro build_source(source='', path_prefix='', default_source='', indent_width=6) -%}
{% set url = '' -%}
{% if source -%}
    {%- if source.startswith('salt://') or source.startswith('/') %}
        {%- set url = '- ' ~ source %}
    {%- else %}
        {%- set url = salt['file.join']('- salt://', tplroot, path_prefix, source) %}
    {%- endif %}
{% else -%}
    {%- set url = salt['file.join']('- salt://', tplroot, path_prefix, default_source) %}
{% endif -%}
{{ url|indent(indent_width, True) }}
{%- endmacro %}

{%- macro build_args(value, key='', ind=0, prefix='-', operator='=', nl_sep='', lb='\n') -%}
    {#- If value is bool, num or string - render as is (but convert boolean to string) -#}
    {#- Using 'sameas' comparison to check boolean because 'boolean' test added only in Jinja v2.11 -#}
    {%- if value is number or value is string or value is sameas true or value is sameas false -%}
        {%- if key and value -%}
{{ prefix ~ key|indent(ind, True) }}{{ operator }}{{ value|string }}{{ nl_sep }}{{ lb }}
        {%- endif -%}
    {#- If value is mapping (dict) - call build_args() recursively -#}
    {%- elif value is mapping -%}
        {%- for k, v in value.items() -%}
{{ build_args(v, k, ind, prefix, operator, nl_sep, lb) }}
        {%- endfor -%}
    {#- If value is list - call build_args() for each item effectively rendering 'key=value' for each list item -#}
    {%- elif value is iterable -%}
        {%- for v in value -%}
{{ build_args(v, key, ind, prefix, operator, nl_sep, lb) }}
        {%- endfor -%}
    {%- endif -%}
{%- endmacro -%}

{%- macro dump_ini(value, key='', lb='\n', lvl=0) -%}
    {#- True / False  must be converted to 1 / 0 -#}
    {%- if value is sameas True -%}
        {%- set value = 1 -%}
    {%- elif value is sameas False -%}
        {%- set value = 0 -%}
    {%- endif -%}
    {%- if value is number or value is string -%}
        {%- if key|string and value|string -%}
{{ key }} = {{ value|string }}{{ lb }}
        {%- else -%}
{{ value|string }}{{ lb }}
        {%- endif -%}
    {%- elif value is mapping -%}
        {%- for k, v in value.items() -%}
            {#- If we at lvl 0 key name is a section name - create section block -#}
            {%- if lvl == 0 -%}
{{ lb }}[{{ k }}]{{ lb }}
{#- And iterate over data under that key -#}
{{ dump_ini(v, '', lvl=lvl+1) }}
            {%- else -%}
{{ dump_ini(v, k, lvl=lvl+1) }}
            {%- endif -%}
        {%- endfor -%}
    {%- elif value is iterable and not value is string -%} {# list #}
        {%- for v in value -%}
{{ dump_ini(v, '', lvl=lvl) }}
        {%- endfor -%}
    {%- endif -%}
{%- endmacro -%}
